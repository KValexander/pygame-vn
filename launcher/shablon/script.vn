# type name = ("value", color)
name n1 = (Первая, (255, 255, 255))
name n2 = (Вторая, (255, 255, 255))
name n3 = (Третья, (255, 255, 255))
name supa = (Голос, (255, 255, 255))

# type name = src
background class = class.jpg
background teachers = teachers.jpg

# type name = ("src", xy)
character one = (1.png, (0.0, 0.0))
character two = (2.png, (0.0, 0.0))
character three = (3.png, (0.0, 0.0))
character hana = (hana.png, (0.0, 0.0))

# type name = src
sound mario = ss/mario.mp3

# type name = src
music back = ss/background.ogg

# type name = n
count i = 0
count j = 0
count e = 0
count t = 0

# только False или True
# type name = state
bool state = False

# type name = state
bool fi = False
bool tw = False
bool th = False

bool hanashow = False

bool test = False

start:
	# Можно вызывать как по ссылке, так и из переменной
	background class
	# или background class.jpg

	condition "Желаете перейти на тестовый полигон или к обучению?"
		Тестовый полигон: continue
		Обучение: go cond
	end condition

	"Тестовый полигон"

	#"{t}"
	#t++
	#"{t}"
	#t--
	#"{t}"

	if t == 0: "После этой реплики вернитесь обратно"; t++
	elif t > 0: "Удивительные чудеса программирования"; test True
	endif go 

	if test: "Почему это произошло?"
	elif t == 1: "Вернитесь обратно нажав на текстуру в левой части диалогового окна"
	endif

	"После того, как вы увидели реплику о возвращении обратно сработало увеличение счётчика и оно перестало соответствовать старому условию"
	"Вернувшись, вы попали на новое условие"

	supa "Понимаю"
	supa Не понимаю
	supa "Частично" понимаю

	if test: supa "Понимаю"
	endif

	if test: supa Не понимаю
	endif

	if test: supa "Частично" понимаю
	endif

	# Все команды работы со звуком
	# Можно вызывать как по ссылке, так и из переменной
	# music background.ogg или music back
	# musicvolume 0.5
	# musicstop
	# musicload background.ogg или music back
	# musicplay
	# musicpause
	# musicunpause
	# Можно вызывать только из переменной
	# sound mario
	go cond

label st:

	"Добро пожаловать. Вы создали свой новый проект на базе программы VN."

	"Этот текст призван ознакомить вас с основными возможностями разработки своей визуальной новеллы на базе файла скрипта"

	"Если вы уже ознакомлены со всем базовым функционалом возможностей, то можете смело удалять весь скрипт, оставив лишь команду start: и единственную реплику"

	go cond

label cond:
	condition "С чем бы вы хотели ознакомиться?":
		Переменные: go variables
		Работа с текстом: go text
		Команды: go commands
		Операторы: go operators
		Метки: go lab
		Музыка и звуки: go sound
		Старый курс: go old
		Главное меню: continue
	end condition

	return

label variables:
	condition "Всего на данный момент существует 7 типов переменных":
		name: go var_name
		background: go var_background
		character: go var_character
		sound: go var_sound
		music: go var_music
		count: go var_count
		bool: go var_bool
		Обратно: continue
	end condition

	go cond

label var_name:
	"Переменные типа name"

	"Переменные типа name предназначены для обозначения имён репликам от лица различных персонажей"

	"Они записывается до метки start: в файле скрипта и пишуться в следующем формат:"

	"name n = (Имя, (255, 255, 255))"

	"n - это название переменной, с помощью которой будет идти обращение к имени"

	"Имя - это само имя, которое будет отображаться во время диалога"

	"(255,255,255) - это цвет отображения имени"

	"После записи переменной, её можно использовать в диалогах"

	"Для использования необходимо в файле скрипта после метки start: сделать запись в следующем формате"

	"n 'Отображаемый от имени персонажа текста'"

	supa "К примеру подобным образом"

	supa "Сейчас я веду свой диалог от лица голоса, которому заранее задал имя"

	supa "Так же стоит учесть, что отображаться будет только тот текст, который находится в кавычках"

	supa "Иначе будет выводиться только имя без каких-либо реплик"

	supa 

	"Вернёмся обратно"

	go cond

label text:
	"Работа с текстом"

	"Существует всего два метода работы с текстом"

	"Первый - это вывод обычных безименованных реплик"

	"Второй - вывод реплик с именем"

	"Так же есть возможность вывода переменных с типом данных счётчик в текст по формату:"

	"Количество баллов - {c}"

	"В данном случае выведется только обычный текст, так как не было объявлено такой переменной"

	"В следующей же реплике уже выведется число"

	"Количество баллов - {t}"

	"Вернёмся к методам вывода текста"

	"Для вывода простых безименованных реплик необходимо просто в файле скрипта на новой строке после метки start: открыть кавычки и написать в них текст"

	""Текст для вывода""

	"Второй способ предполагает вывод реплики от имени персонажа"

	"Для этого необходимо перед метко start: объявить переменную с типом данных name. Подробнее можете ознакомиться в разделе переменных"

	"После объявления переменной необходимо сделать запись в подобном формате:"

	"n 'Отображаемый от имени персонажа текста'"

	supa "К примеру подобным образом"

	supa "Сейчас я веду свой диалог от лица голоса, которому заранее задал имя"

	supa "Так же стоит учесть, что отображаться будет только тот текст, который находится в кавычках"

	supa "Иначе будет выводиться только имя без каких-либо реплик"

	supa

	"На данный момент материал ещё структурируется"

	go cond

label commands:
	"Основные команды"

	"На данный момент материал ещё структурируется"

	go cond

label operators:
	"Работа с операторами"

	"Существует всего два оператора в файле скрипта"

	"Первый это оператор сравнения if elif else и второй это оператор выбора condition"

	"Структура первого оператора состоит следующим образом:"

	"if 1 > 0: continue, где следующей строкой идёт команда end if закрывающая оператор сравнения"

	"Закрывающей строкой после if elif else всегда должна стоять end if, иначе оператор будет вести себя некорректно и не будет соответствовать ожидаемым результатам"

	"Этот оператор поддерживает команды go, bool True/False, counter++/--, background, show, hide, вывод именных и безименованных реплик, и команда continue"

	"Пример использования команд:"

	"if 1 > 0: "Я выведу здесь этот текст""

	if 1 > 0: "Я выведу здесь этот текст"
	endif

	"Оператор condition поддерживает все те же самые команды"

	"В операторе сравнения так же можно сравнивать значения переменных с типом данных счётчик:"

	"if i >= j: continue"

	"Или проверка на истинность переменной с булийным типом данных:"

	"if bool: continue"

	"Команды elif 1 > 0: continue идут сразу за if"

	"Для использования сразу нескольких команд, необходим перечислять их через знак ";":"

	"if i > 0: i++; bool True; continue"

	"elif по сути являеться альтернативным условием, в случае несоответствия с первым"

	"При наличии else, если условия в операторах не проходят, то выполняется его код:"

	"else: continue"

	"Это что касается оператора сравнения if elif else"

	"На данный момент материал ещё структурируется"

	"Дальше идёт оператор выбора condition, объявляемый в подобном формате:"

	"condition "Текст выводимый при выборе вариантов":"

	"Так же как и с оператором if, оператор condition после написания всех вариантов ответа на следующей строке должен содержать команду end condition для корректного опредения условий"

	"Варианты выбора перечисляются между строками condition и end condition:"

	"Условие: continue"

	"condition поддерживает все те же команды, что и оператор if"

	"Вернёмся обратно"

	go cond

label lab:
	"Работа с метками"

	"На данный момент материал ещё структурируется"

	go cond

label sound:
	"Работа с музыкой и звуками"

	"На данный момент материал ещё структурируется"

	go cond

label old:
	# Увеличение переменной счётчика прямо в тексте
	# t++
	# Изменение состояние булийной переменной
	# state True

	#"Первая тестовая реплика"

	# Проверка состояния булийной переменной
	#if state: n1 "Вторая тестовая реплика для проверки возможности вывода сообщений в условиях"
	#end if

	# if 1 > 0 && 1 < 0: supa "Истинно всё"
	# elif 1 > 0 || 1 < 0: supa "Истинно лишь одно"
	# endif
		
	"Стартовая реплика"
	
	condition "Вы можете выбрать любой интересующий вас пункт":
		Увеличить i: i++
		Увеличить j: j++
		Увеличить e: e++
	end condition

	"{i}, {j}, {e}"

	if i == 1: j++
	elif j == 1: e++
	elif e == 1: i++
	endif

	"{i}, {j}, {e}"

	"Первая реплика для демонстрации безименованных реплик"

	"Задний фон появился благодаря команде background "class.jpg", где "class.jpg" - это ссылка на изображение "

	"Команда background получает изображения из папки images/medley/"

	"Большая реплика. Текст для наполнения реплики различным текстовым содержанием для демонстрации перехода текста на следующую строку"

	"После этой реплики на экране появятся трое персонажей"

	show one left
	show three right
	show two center

	"Персонажи появились благодаря команде show char center, где  center - расположение персонажа на экране, а char - это заранее заданная переменная до метки start в скрипте, в формате character n = ("src.png", (0.0; 0.0)). character - тип переменной, n - название переменной, "src.png" - ссылка до изображения, (0.0; 0.0) - координаты появления в случае отсутствия местоположения после команды, от 0.0 до 1.0 "

	"Переменная персонажа получает изображение из папки images/characters/"

	"Причём одну переменную персонажа за раз можно вызвать только в одном место"

	"Изменение путей до изображений пока не продекларировано"

	"Дальше будут идти именованные реплики"

	n1 "— Говорит первый персонаж"

	n2 "— Отвечает второй"

	n1 "— Вновь говорит первый"

	"Именованные реплики начинаются с переменной, содержащей имя персонажа, после чего уже идёт сама реплика. Формат var "реплика" "

	"Переменные имён задаются до метки start, в формате name n = ("Name", (255,255,255)), где name - это тип переменной, , n - название переменной, "Name" - отображающееся имя, (255,255,255) - цвет имени"

	"Дальше вы переходите на новую метку с помощью команду go new, где go - сама команда, а new - название метки"

	condition "Желаете перейти на новую метку?":
		Да(+i): i++; go new
		Мне нужно подумать(+j): j++; continue
		Нет(+e): e++; continue
	end condition

	"В таком случае останемся здесь"

	"Но нам всё же придётся перейти к следующей метке для продолжения объяснений команд приложения"

	go transitional

label new:

	background teachers.jpg

	"Вы находитесь на новой метке. Метки в скрипте обозначаются командой label new:, где label - объявление метки, а new - название. Наличие двоеточия является обязательным"

	"К сожалению возвращение обратно из новой метки к предыдущей на данный момент недоступно"

	"Задний фон всё так же был изменён командой background "src.jpg" "

	"При следующем клике персонажи исчезнут с экрана"

	hide one
	hide two
	hide three

	"Персонажи исчезли благодаря команде hide char, где char - это переменная персонажа"

	"Так же можно использовать команду hide characters для одновременного сокрытия всех выведенных персонажей"

	"В следующей реплике персонажи вновь появятся"

	show one left
	show three right
	show two center

	"Продолжение диалога"

	n1 "— Первая реплика."

	n2 "— Следующая реплика."

	n1 "— Повторная реплика."

	n2 "— Ещё одна реплика."

	n3 "— Как дополнение."

	"Конец диалога. Вновь переход на безименованные реплики"

	"Переходим к следующей метке"

	go transitional

label transitional:

	hide characters

	"После этой реплики произойдёт сравнение переменных типа счётчик, объявленых до начала скрипта."

	"И в зависимости от сравнения вас перенесёт на соответствующую метку."

	"Количество ваших очков: i - {i}, j - {j}, e - {e}"

	if i > 1: go first
		elif j > 1: go second
		elif e > 1: go third
		else: continue
	end if

	"Вы продолжаете идти по строкам той же метки, потому что не достигли ни одного из условий и был вызван оператор else"

	go common

label first:

	show one center

	fi True

	"Вы только что перешли на метку условия if i > 1"

	"Для достижения этого условия необходимо достичь 2 и более баллов для счётчика i"

	hide one

	go common

label second:

	show two center

	tw True

	"Вы только что перешли на метку условия elif j > 1"

	"Для достижения этого условия необходимо достичь 2 и более баллов для счётчика j"

	hide two

	go common

label third:

	show three center

	th True

	"Вы только что перешли на метку условия elif e > 1"

	"Для достижения этого условия необходимо достичь 2 и более баллов для счётчика e"

	hide third

	go common

label common:

	hide characters

	"Для определения вашего выбора были использованы переменные с типом данных счётчик, в которые записались значения выбора"

	"Переменные счётчика могут изменяться только внутри операторов condition и if"

	"Оператор if сравнивает числа и значения счётчиков. Операторы сравнения: ==, >=, <=, >, <, !="

	"В случае если сравнение не проходит, то строка идёт дальше. Если за ней следует команда elif, то исполняется код этого оператора, в ином случае код исполняет команды оператора else если он есть, или дальше идёт по линии скрипта"

	"Хотелось бы ещё реализовать изменение цвета текста, доработать основную логику, логику перехода на предыдущие линии, добавить возможность вывода переменных в тексте, команд вывода и затухания звука и команды анимации вывода заднего фона и персонажей."

	condition "Желаете ли вы закончить игру или продолжить?":
		Закончить: continue
		Продолжить: go next
	end condition

	"Конец короткой демонстрации. Следующее нажатие вернёт вас на главное меню"

	return

label next:
	
	if fi: "Вы выбрали первую девушку"
	elif tw: "Вы выбрали вторую девушку"
	elif th: "Вы выбрали третью девушку"
	else: continue
	end if

	if j > 10: show hana center; hanashow True; background flume.png
	else: continue
	end if

	"Это тестовый полигон проверок различных операторов"

	"Основные возможности оператора condition проверены. Доступные команды внутри этого оператора: continue - продолжить текущие линии скрипта, go next - переход на метку, где next - это название метки, i++ - увеличение переменной, где i - это название переменной с типом данных счётчик, i-- - уменьшение переменной, где i - это название переменной с типом данных счётчик, bool True/False - изменение состояния булийной переменной и вывод как именных, так и безименных реплик"

	"С оператором if ещё есть множество проблем, некорретность проверок и возможность составлять только самые простые конструкции. "

	if hanashow: hide hana
	else: continue
	endif

	"На данные момент тут более ничего нет"

	return